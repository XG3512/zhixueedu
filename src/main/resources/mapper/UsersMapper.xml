<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xvls.alexander.dao.UsersMapper">

    <resultMap id="userRole" type="com.xvls.alexander.entity.wx.Users">
        <id column="user_id" property="userId"></id>
        <result column="user_num" property="userNum"></result>
        <result column="password" property="password"></result>
        <result column="school_id" property="schoolId"></result>
        <result column="department_id" property="departmentId"></result>
        <result column="major_id" property="majorId"></result>
        <result column="class_id" property="classId"></result>
        <result column="user_name" property="userName"></result>
        <result column="sex" property="sex"></result>
        <result column="nation" property="nation"></result>
        <result column="grade" property="grade"></result>
        <result column="id_card" property="idCard"></result>
        <result column="phone" property="phone"></result>
        <result column="mail" property="mail"></result>
        <result column="address" property="address"></result>
        <result column="salt" property="salt"></result>
        <collection property="roleList" ofType="com.xvls.alexander.entity.Role">
            <id column="role_id" property="roleId"></id>
            <result column="role_name" property="roleName"></result>
            <collection property="permissions" ofType="com.xvls.alexander.entity.Permission">
                <id column="permission_id" property="permissionId"></id>
                <result column="permission_name" property="permissionName"></result>
                <result column="permission_code" property="permissionCode"></result>
            </collection>
        </collection>
        <collection property="permissions" ofType="com.xvls.alexander.entity.Permission">
            <id column="permission_id" property="permissionId"></id>
            <result column="permission_name" property="permissionName"></result>
            <result column="permission_code" property="permissionCode"></result>
        </collection>
    </resultMap>

    <resultMap id="teacherMainPage" type="com.xvls.alexander.entity.wx.TeacherMainPage">
        <id column="user_id" property="userId"></id>
        <result column="icon" property="icon"></result>
        <result column="background" property="background"></result>
        <result column="user_name" property="userName"></result>
        <result column="motto" property="motto"></result>
        <result column="fans_num" property="fansNum"></result>
        <result column="good_num" property="goodNum"></result>
        <result column="collection_num" property="collectionNum"></result>
        <result column="school_name" property="schoolName"></result>
        <result column="follow_teacher_date" property="followTeacherDate"></result>
    </resultMap>

    <resultMap id="teacherList" type="com.xvls.alexander.entity.wx.TeacherMainPage">
        <id column="user_id" property="userId"></id>
        <result column="icon" property="icon"></result>
        <result column="user_name" property="userName"></result>
        <result column="motto" property="motto"></result>
        <result column="fans_num" property="fansNum"></result>
        <result column="good_num" property="goodNum"></result>
        <result column="collection_num" property="collectionNum"></result>
        <result column="school_name" property="schoolName"></result>
        <result column="follow_teacher_date" property="followTeacherDate"></result>
    </resultMap>

    <select id="getWxStudentInfoByUserNum" parameterType="java.lang.String" resultMap="userRole">
        SELECT users.*,role.*,permission.* FROM users
        left join user_role on users.user_id = user_role.user_id
        left join role on user_role.role_id = role.role_id
        left join role_permission on role_permission.role_id=user_role.role_id
        left join permission on permission.permission_id=role_permission.permission_id
        WHERE user_num=#{user_num}
    </select>

    <select id="getUserId" resultType="java.lang.Integer">
        select users.user_id from users
        inner join user_role on users.user_id = user_role.user_id
        inner join role on user_role.role_id = role.role_id
        where users.user_num = #{userNum} and users.school_id = #{schoolId} and role.role_name = #{role}
    </select>

    <!--通过 userNum,schoolId,role 获得用户信息-->
    <select id="getUserInfo" resultMap="userRole">
        select users.*,role.*,permission.*
        from users
        inner join user_role on users.user_id = user_role.user_id
        inner join role on user_role.role_id = role.role_id
        left join role_permission on role_permission.role_id=user_role.role_id
        left join permission on permission.permission_id=role_permission.permission_id
        where users.user_num = #{userNum} and users.school_id = #{schoolId} and role.role_name = #{role}
    </select>

    <select id="getWxStudentInfoByUserId" parameterType="java.lang.Integer" resultMap="userRole">
        SELECT users.*,role.*,permission.* FROM users
        left join user_role on users.user_id = user_role.user_id
        left join role on user_role.role_id = role.role_id
        left join role_permission on role_permission.role_id=user_role.role_id
        left join permission on permission.permission_id=role_permission.permission_id
        WHERE users.user_id=#{userId}
    </select>

    <update id="updateUsersWxUserIdByUserId">
        update users set wx_user_id = #{wxUserId} where user_id = #{userId}
    </update>

    <update id="addFansNum">
        update users set fans_num = fans_num + 1 where user_id = #{teacherId}
    </update>

    <update id="decreaseFansNum">
        update users set fans_num = fans_num - 1 where user_id = #{teacherId}
    </update>

    <!--更新教师 点赞、收藏 数量-->
    <update id="updateTeacherGoodCollectionNum">
        update users set good_num = COALESCE((select sum(good_num) from video_main group by (teacher_id) having teacher_id=#{teacherId}),0),
        collection_num = COALESCE((select sum(collection_num) from video_main group by (teacher_id) having teacher_id=#{teacherId}),0)
        where users.user_id = #{teacherId}
    </update>

    <update id="updateTeacherBackground">
        update users set background = #{file_url} where user_id = #{teacherId}
    </update>

    <update id="updateUserIcon">
        update users set icon = #{file_url} where user_id = #{userId}
    </update>

    <select id="getTeacherMainPage" resultMap="teacherMainPage">
        select users.*,
        school.school_name,
        follow_teacher.follow_teacher_date
        from users
        left join school on school.school_id = users.school_id
        left join follow_teacher on follow_teacher.teacher_id = users.user_id and follow_teacher.wx_user_id = #{wxUserId}
        where users.user_id = #{teacherId}
    </select>

    <select id="getFollowTeacherList" resultMap="teacherList">
        select users.*,
        school.school_name,
        follow_teacher.follow_teacher_date
        from follow_teacher
        left join users on users.user_id = follow_teacher.teacher_id
        left join school on school.school_id = users.school_id
        where follow_teacher.wx_user_id = #{wxUserId}
        ORDER BY follow_teacher.follow_teacher_date DESC
    </select>


</mapper>